@*Cuando el método Get se ejecute AddProductViewModel será nulo
    pero cuando se ejecute el Post, si hay algun error, entonces recibirá el objeto
    con esto evitamos que cuando el usuario cometa algun error tenga que llenar
    todos los campos de nuevo.*@

@model Isabella.Web.ViewModels.ProductViewModel.AddProductViewModel;



@{
    ViewData["Title"] = "Crear";
    ViewData["Name"] = "Nombre";
    ViewData["Price"] = "Precio";
    ViewData["Cant"] = "Cantidad";
    ViewData["IsAvailable"] = "Disponible?";
    ViewData["IsSupportAggregate"] = "Agregados?";
    ViewData["Categorie"] = "Categoria";
}

<h2>@ViewData["Title"]</h2>
<hr />
@*Formulario para crear productos*@
<div class="row">
    <div class="col-lg-auto">
        <form asp-action="Create" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label">@ViewData["Name"]</label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Price" class="control-label">@ViewData["Price"]</label>
                <input asp-for="Price" class="form-control" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>
            <div class="form-group">
                <fieldset>
                    @ViewData["Categorie"]
                    @*Crea el ComboBox que creamos en el Controller usando ViewBag*@
                    @Html.DropDownList("Categories")
                </fieldset>
            </div>
            <div class="form-group">
                <label asp-for="ImageFile" class="control-label"></label>
                <input asp-for="ImageFile" type="file"/>
                <span  asp-validation-for="ImageFile" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Stock" class="control-label">@ViewData["Cant"]</label>
                <input asp-for="Stock" class="form-control text-danger"/>
                <span asp-validation-for="Stock" class="text-danger"></span>
            </div>
            <div class="form-group">
                <div class="checkbox">
                    <label>
                        <input asp-for="IsAvailabe" /> @ViewData["IsAvailable"]
                    </label>
                </div>
            </div>
            <div class="form-group">
                <button type="submit" value="Create" 
                 class="btn btn-primary"><i class="fa fa-save"></i> Crear</button>
                <a asp-action="Index" class="btn btn-success"><i class="fa fa-chevron-left"></i> Atrás</a>
            </div>
        </form>
    </div>
</div>

@*Ejecuta los scripts para generar el color rojo en los textos de error*@
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
