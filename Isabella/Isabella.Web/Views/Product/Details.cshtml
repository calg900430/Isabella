@*
    Vista para mostrar los detalles de un producto
*@


@*Establece que objeto va a recibir la View*@
@model Isabella.Web.ViewModels.ProductViewModel.GetProductViewModel

@{
    ViewData["Title"] = "Detalles";
    ViewData["Producto"] = "Producto";
    ViewData["Id"] = "Id";
    ViewData["Name"] = "Nombre";
    ViewData["Image"] = "Imagen";
    ViewData["Categorie"] = "Categoria";
    ViewData["SubCategorie"] = "SubCategorias";
    ViewData["NotSubCategorie"] = "No tiene subcategorias establecidas";
    ViewData["Price"] = "Precio";
    ViewData["IsAvailable"] = "Disponible?";
    ViewData["IsSupportAggregate"] = "Agregados?";
    ViewData["Description"] = "Descripción";
}
<hr />

<h2>@ViewData["Title"]</h2>
<div class="row">
    <div class="col-md-12">
        <div style="text-align:center">
            @if (Model.GetAllImagesProducts != null)
            {
                if (Model.GetAllImagesProducts.Count > 0)
                {
                    @*Convierte el array byte en una imagen*@
                    <img src="data:imge;base64,@System.Convert.ToBase64String(Model.GetAllImagesProducts[0].Image)" ,
                         style="width:300px;height:450px;max-width: 100%; height: auto; text-align:center" />
                }
                else
                {
                    <b>Imagen No Disponible</b>
                }
            }
            else
            {
                <b>Imagen No Disponible</b>
            }
        </div>

        <hr />
        <div>
            <label>@ViewData["Name"]</label>
            <p class="text-success">@Html.DisplayFor(model => model.Name)</p>
        </div>
        <hr />
        <div>
            <label>@ViewData["Description"]</label>
            <p class="text-success" rows="3">@Html.DisplayFor(model => model.Description)</p>
        </div>
        <hr />
        <div>
            <label>@ViewData["Categorie"]</label>
            <p class="text-success">@Html.DisplayFor(model => model.Categorie.Name)</p>
        </div>
        <hr />
        <div>
            <label>@ViewData["SubCategorie"]</label>
            <select class="form-select text-success" id="SelectSubCategories">
                @if (Model.GetSubCategories.Count <= 0 || Model.GetSubCategories == null)
                {
                    <option>@ViewData["NotSubCategorie"]</option>
                }
                else
                {
                    @foreach (var subcategorie in Model.GetSubCategories)
                    {
                        <option>@subcategorie.Name</option>
                    }
                }
            </select>
            <hr />
            <div>
                <label>@ViewData["Price"]</label>
                <p class="text-success">@Html.DisplayFor(model => model.Price)</p>
            </div>
            <hr />
            <div>
                <label>@ViewData["IsSupportAggregate"]</label>
                @if (Model.SupportAggregate)
                {
                    <p class="text-success">Sí </p>
                }
                else
                {
                    <p class="text-success">No</p>
                }
            </div>
            <hr />
            <div>
                <label>@ViewData["IsAvailable"]</label>
                @if (Model.IsAvailabe)
                {
                    <p class="text-success">Sí </p>
                }
                else
                {
                    <p class="text-success">No</p>
                }
            </div>
            <hr />
            <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning">Actualizar</a>
            <a asp-action="Index" class="btn btn-success"><i class="fa fa-chevron-left"></i> Atrás</a>
        </div>
</div>






