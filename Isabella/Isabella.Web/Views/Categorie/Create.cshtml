@model Isabella.Web.ViewModels.CategorieViewModel.AddCategorieViewModel;


@{
    ViewData["Title"] = "Crear";
    ViewData["Name"] = "Nombre";
}

<hr />

<h2>@ViewData["Title"]</h2>

@*Formulario para crear una nueva categoria*@
<div class="row">
    <div class="col-lg-auto">
        <form id="form_create_categorie" asp-action="Create" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="Name" class="control-label">@ViewData["Name"]</label>
                <input id="nameCategorie" asp-for="Name" class="form-control" placeholder="Escriba el nombre de la categoria" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>

            <hr />

            <div class="form-group">
                <button type="submit" value="Create" id="createCategorie"
                        class="btn btn-primary">
                    <i class="fa fa-save"></i> Crear
                </button>
                <a asp-action="Index" class="btn btn-success"><i class="fa fa-chevron-left"></i> Atrás</a>
            </div>
        </form>
    </div>
</div>
<hr />

@*Ventana Modal para crear la categoria.*@
<div id="responseCreateCategorie" class="modal fade">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title"></h5>
                <button id="btnCreateCategorie" type="button" class="btn-close" data-bs-dismiss="modal"
                        aria-label="Close">
                    <span aria-hidden="true"></span>
                </button>
            </div>
            <div class="modal-body" style="text-align:center">
                <p id="messageCreateCategorie">
                </p>
                <hr />
                <div class="fa-2x">
                    <i id="iconWaitCreateCategorie" class="fas fa-spinner fa-spin"></i>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success" id="btnCloseCreateCategorie">Ok</button>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    @*Ejecuta los scripts para generar el color rojo en los textos de error*@
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script type="text/javascript">
        $(document).ready(function () {

            //Obtiene la URI y crea la el endpoint para crear un nuevo producto
            let url = getUriServer() + 'categorie/create';
            
            //Evento Click del Botón Cerrar(Cierra la ventana Modal de respuesta del servidor)
            $('#btnCreateCategorie').click(function (e) {
                e.preventDefault();
                $("#responseCreateCategorie").modal('hide');
                return false;
            });

            //Evento Click del Botón Cerrar(Cierra la ventana Modal de respuesta del servidor)
            $('#btnCloseCreateCategorie').click(function (e) {
                e.preventDefault();
                $('#responseCreateCategorie').modal('hide');
                return false;
            });

            //Evento click del botón Login.
            $("#createCategorie").click(async function (e) {
                try {
                    e.preventDefault();
                    $('#form_create_categorie').validate();
                    if ($('#form_create_categorie').valid() === false) {
                        return false;
                    }
                    else {
                        $('#iconWaitCreateCategorie').hide();
                        $('#messageCreateCategorie').text("");
                        //Muestra la modal de crear el producto.
                        $('#responseCreateCategorie').modal({ backdrop: "static", keyboard: true }, 'show');
                        $('#iconWaitCreateCategorie').show();
                        $('#messageCreateCategorie').text("Creando Categoria...");
                        //Deshabilita los botones Ok y Cerrar de la modal
                        $('#btnCreateCategorie').prop("disabled", true);
                        $('#btnCloseCreateCategorie').prop("disabled", true);
                        //Obtiene los valores del formulario
                        var name = $('#nameCategorie').val();
                        //Crea el formulario de datos de la categoria.
                        var formData = new FormData();
                        formData.append("Name", name);
                        var responseService = await Create(formData);

                        if (responseService.status == 200) {
                          $("#responseCreateCategorie").modal('hide');
                          $('#iconWaitCreateCategorie').hide();
                          $('#messageCreateCategorie').text("");
                          $('#btnCloseCreateCategorie').prop("disabled", false);
                          $('#btnCreateCategorie').prop("disabled", false);
                          window.location.href = '/Categorie';
                          return false;
                        }
                        else if (responseService.status == 404) {
                            let response = await responseService.json();
                            let message = response.message;
                            $('#iconWaitCreateCategorie').hide();
                            $('#messageCreateCategorie').text(message)
                            $('#btnCreateCategorie').prop("disabled", false);
                            $('#btnCloseCreateCategorie').prop("disabled", false);
                            return false;
                        }
                        else if (responseService.status == 400) {
                            $('#iconWaitCreateCategorie').hide();
                            $('#messageCreateCategorie').text("Error en los datos del modelo enviados al servidor.");
                            $('#btnCreateCategorie').prop("disabled", false);
                            $('#btnCloseCreateCategorie').prop("disabled", false);
                            return false;
                        }
                        else {
                            $('#iconWaitCreateCategorie').hide();
                            $('#messageCreateCategorie').text("Se originó un error desconocido.")
                            $('#btnCreateCategorie').prop("disabled", false);
                            $('#btnCloseCreateCategorie').prop("disabled", false);
                            return false;
                        }
                    }
                }
                catch (error) {
                    $('#iconWaitCreateCategorie').hide();
                    $('#messageCreateCategorie').text(error.message)
                    $('#btnCreateCategorie').prop("disabled", false);
                    $('#btnCloseCreateCategorie').prop("disabled", false);
                    return false;
                }

            })

            //Crear Categoria.
            async function Create(categorie) {
                let responseService = await fetch(url, {
                    method: 'POST',
                    body: categorie
                });
                return responseService;
            }

        });
    </script>
}